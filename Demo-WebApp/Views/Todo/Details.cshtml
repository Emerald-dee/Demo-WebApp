@model Demo_WebApp.Models.TodoItem
@{
    ViewData["Title"] = "Todo Details";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card shadow">
            <div class="card-header @(Model.IsComplete ? "bg-success" : "bg-info") text-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-eye me-2"></i>Todo Details
                    </h4>
                    @if (Model.IsComplete)
                    {
                        <span class="badge bg-light text-success">
                            <i class="fas fa-check me-1"></i>Completed
                        </span>
                    }
                </div>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Title:</dt>
                    <dd class="col-sm-9 @(Model.IsComplete ? "text-decoration-line-through" : "")">@Model.Title</dd>

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <dt class="col-sm-3">Description:</dt>
                        <dd class="col-sm-9">@Model.Description</dd>
                    }

                    <dt class="col-sm-3">Priority:</dt>
                    <dd class="col-sm-9">
                        <span class="badge @GetPriorityBadgeClass(Model.Priority)">
                            @Model.Priority Priority
                        </span>
                    </dd>

                    <dt class="col-sm-3">Status:</dt>
                    <dd class="col-sm-9">
                        <span class="badge @(Model.IsComplete ? "bg-success" : "bg-warning")">
                            @(Model.IsComplete ? "Completed" : "Pending")
                        </span>
                    </dd>

                    @if (Model.DueDate.HasValue)
                    {
                        <dt class="col-sm-3">Due Date:</dt>
                        <dd class="col-sm-9 @(Model.DueDate < DateTime.Now && !Model.IsComplete ? "text-danger" : "")">
                            @Model.DueDate.Value.ToString("MMMM dd, yyyy")
                            @if (Model.DueDate < DateTime.Now && !Model.IsComplete)
                            {
                                <i class="fas fa-exclamation-triangle text-danger ms-2" title="Overdue"></i>
                            }
                        </dd>
                    }

                    <dt class="col-sm-3">Created:</dt>
                    <dd class="col-sm-9">@Model.CreatedDate.ToString("MMMM dd, yyyy 'at' h:mm tt")</dd>

                    <dt class="col-sm-3">Last Updated:</dt>
                    <dd class="col-sm-9">@Model.UpdatedDate.ToString("MMMM dd, yyyy 'at' h:mm tt")</dd>
                </dl>
            </div>
            <div class="card-footer bg-transparent">
                <div class="d-flex gap-2">
                    <form asp-action="ToggleComplete" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn @(Model.IsComplete ? "btn-warning" : "btn-success")">
                            <i class="fas @(Model.IsComplete ? "fa-undo" : "fa-check") me-1"></i>
                            @(Model.IsComplete ? "Mark as Pending" : "Mark as Complete")
                        </button>
                    </form>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                        <i class="fas fa-edit me-1"></i>Edit
                    </a>
                    <form asp-action="Delete" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this todo?');">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i>Delete
                        </button>
                    </form>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetPriorityBadgeClass(Demo_WebApp.Models.Priority priority)
    {
        return priority switch
        {
            Demo_WebApp.Models.Priority.Low => "bg-secondary",
            Demo_WebApp.Models.Priority.Medium => "bg-info",
            Demo_WebApp.Models.Priority.High => "bg-warning",
            Demo_WebApp.Models.Priority.Urgent => "bg-danger",
            _ => "bg-secondary"
        };
    }
}